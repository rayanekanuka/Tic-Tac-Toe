classDiagram
    class Main {
        +main(String[] args)
    }

    class UserInteract {
        -Scanner scanner
        -GameView gameView
        -Game game
        +UserInteract()
        +displayMenu()
        +getIntInput()
        +startGame()
        +decoMenu()
    }

    class GameView {
        -Scanner scanner
        -int sizeX
        -int sizeY
        -Board board
        +GameView()
        +decoration(String decoration)
        +displayBoard(Cell[][] board)
        +makeMove(String playerName, String playerSymbole, int sizeX, int sizeY)
        +displayPlayerMove(String playerName, String playerSymbole)
        +displayInvalidCoordinates()
        +displayOccupiedCell()
        +displayInvalidInput()
        +displayMessage(String message)
        +endGame(String message)
    }

    class Game {
        -int sizeX
        -int sizeY
        -Board board
        -Player currentPlayer
        -Player playerX
        -Player playerO
        -GameView view
        -String decoration
        -int WinWin
        +Game(GameView view, int sizeX, int sizeY, int WinWin)
        +playerChoice(int gameMode)
        +play(int gameMode)
        +getMoveFromPlayer()
        +switchPlayer()
        +isOver()
    }

    class TicTacToe {
        +TicTacToe(GameView view)
        +setDecoration()
    }

    class Gomoku {
        +Gomoku(GameView view)
        +setDecoration()
    }

    class ConnectFour {
        +ConnectFour(GameView view)
        +setDecoration()
    }

    class Player {
        -CellState state
        +Player(CellState state)
        +getRepresentation()
        +getState()
        +toString()
    }

    class HumanPlayer {
        +HumanPlayer(CellState state)
    }

    class ArtificialPlayer {
        +ArtificialPlayer(CellState state)
        +getMove(Cell[][] board, int sizeX, int sizeY)
    }

    class Board {
        -Cell[][] board
        +Board(int sizeX, int sizeY)
        +getBoard()
        +isCellEmpty(int row, int col)
        +setOwner(int row, int col, Player player)
        +checkWin()
        +isBoardFull()
    }

    class Cell {
        -CellState state
        +getRepresentation()
        +setState(CellState state)
    }

    class CellState {
        +EMPTY
        +X
        +O
        +getValue()
    }

    Main "1" --> UserInteract
    UserInteract "1" --> GameView
    UserInteract "1" --> Game
    Game "1..2" --> Player
    Game "1" --> GameView
    Game "1" --> Board
    Game "1" --> TicTacToe
    Game "1" --> Gomoku
    Game "1" --> ConnectFour
    TicTacToe "1" --> Game
    Gomoku "1" --> Game
    ConnectFour "1" --> Game
    Player "1" <|-- HumanPlayer
    Player "1" <|-- ArtificialPlayer
    Board "1..*" --> Cell
    Cell "1" --> CellState
